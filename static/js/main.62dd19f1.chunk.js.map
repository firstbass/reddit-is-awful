{"version":3,"sources":["Blog/Assets/ria.png","Blog/Assets/riabackground.png","Blog/blog-post.1.md","Blog/blog-post.2.md","Blog/blog-post.3.md","Blog/Header.js","Blog/MainFeaturedPost.js","Blog/FeaturedPost.js","Blog/Markdown.js","Blog/Main.js","Blog/Sidebar.js","Blog/Footer.js","Blog/Blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","sections","title","Fragment","Toolbar","className","Typography","component","variant","color","align","noWrap","map","section","Link","key","href","url","mainFeaturedPost","position","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","MainFeaturedPost","post","Paper","style","image","display","src","alt","imageText","Grid","container","item","md","gutterBottom","paragraph","description","linkText","card","cardDetails","cardMedia","width","FeaturedPost","xs","CardActionArea","Card","CardContent","date","Hidden","xsDown","CardMedia","imageTitle","withStyles","listItem","marginTop","markdown","typography","body2","sidebarAboutBox","sidebarSection","Copyright","Date","getFullYear","footer","background","paper","Footer","Container","maxWidth","mainGrid","RiABg","imgText","featuredPosts","RiALogo","post1","post2","post3","Blog","CssBaseline","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62dd19f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ria.3a0e4736.png\";","module.exports = __webpack_public_path__ + \"static/media/riabackground.8ad89815.png\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.1.f3a53693.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.2.99cbba3b.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.3.8d6e276b.md\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n      </Toolbar>\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n        {sections.map(section => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  mainFeaturedPost: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  mainFeaturedPostContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nexport default function MainFeaturedPost(props) {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${post.image})` }}>\n      {/* Increase the priority of the hero background image */}\n      {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.mainFeaturedPostContent}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n            <Link variant=\"h6\" color=\"primary\" href=\"#\">\n              {post.linkText}\n            </Link>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nexport default function FeaturedPost(props) {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Grid item xs={12} md={4}>\n      <CardActionArea component=\"a\" href=\"#\">\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {post.date}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {post.description}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"primary\">\n                Continue reading...\n              </Typography>\n            </CardContent>\n          </div>\n          <Hidden xsDown>\n            <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\n          </Hidden>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n","import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h5',\n      },\n    },\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: { component: Typography, props: { paragraph: true } },\n    a: { component: Link },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from './Markdown';\n\nconst useStyles = makeStyles(theme => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n}));\n\nexport default function Main(props) {\n  const classes = useStyles();\n  const { posts, title } = props;\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Divider />\n      {posts.map(post => (\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n          {post}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  const { archives, description, social, title } = props;\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Paper elevation={0} className={classes.sidebarAboutBox}>\n        <Typography variant=\"h6\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography>{description}</Typography>\n      </Paper>\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n        Archives\n      </Typography>\n      {archives.map(archive => (\n        <Link display=\"block\" variant=\"body1\" href={archive.url} key={archive.title}>\n          {archive.title}\n        </Link>\n      ))}\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n        Social\n      </Typography>\n      {social.map(network => (\n        <Link display=\"block\" variant=\"body1\" href=\"#\" key={network}>\n          <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n            <Grid item>\n              <network.icon />\n            </Grid>\n            <Grid item>{network.name}</Grid>\n          </Grid>\n        </Link>\n      ))}\n    </Grid>\n  );\n}\n\nSidebar.propTypes = {\n  archives: PropTypes.array,\n  description: PropTypes.string,\n  social: PropTypes.array,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Group Lions\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport RiABg from './Assets/riabackground.png'\nimport RiALogo from './Assets/ria.png'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Header from './Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sections = [\n  { title: 'About', url: '#' },\n  { title: 'Media Literacy', url: '#' },\n  { title: 'Selection Bias', url: '#' },\n  { title: 'Navigating Reddit', url: '#' },\n  { title: 'Bonus: Bias in Algorithms', url: '#' },\n];\nconst mainFeaturedPost = {\n  title: 'Staying Aware: Reddit Media Survival Guide',\n  description:\n    \"In a digital world full of lies, deception, and misdirections all competing as news, it can be tough to navigate. Here's how we can make a difference.\",\n  image: RiABg,\n  imgText: 'RiA Logo',\n  linkText: 'Continue reading…',\n};\n\nconst featuredPosts = [\n  {\n    title: 'Selection Bias: What is it?',\n    date: 'Mar 14',\n    description:\n      'Selection bias blah blah blah blah',\n    image: RiALogo,\n\n    imageText: 'RiA Logo',\n  },\n  {\n    title: 'Practicing Media Literacy',\n    date: 'Mar 14',\n    description:\n      'Media Literacy blah blah blah',\n    image: RiALogo,\n    imageText: 'RiA Logo',\n  },\n  {\n    title: 'Bonus: Bias in Algorithms',\n    date: 'Mar 14',\n    description:\n      'Algorithms have bias blah blah blah',\n    image: RiALogo,\n    imageText: 'RiA Logo',\n  },\n  \n];\n\nconst posts = [post1, post2, post3];\n\nconst sidebar = {\n  title: 'About',\n  description:\n    'Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.',\n  archives: [\n  ],\n  social: [\n  ],\n};\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title=\"Reddit Is Awful\" sections={sections} />\n        <main>\n          <MainFeaturedPost post={mainFeaturedPost} />\n          <Grid container spacing={4}>\n            {featuredPosts.map(post => (\n              <FeaturedPost key={post.title} post={post} />\n            ))}\n          </Grid>\n          <Grid container spacing={5} className={classes.mainGrid}>\n          </Grid>\n        </main>\n      </Container>\n      <Footer title=\"Reddit is Awful\" description=\"A Technical English project made for Dr. Klein's Technical English 3130 class\" />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Blog from './Blog/Blog'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Blog />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}